{"version":3,"file":"static/js/415.0d97e305.chunk.js","mappings":"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","sources":["components/Register/index.jsx","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  // Checkbox,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Select,\r\n  notification,\r\n} from 'antd';\r\n// import { AlertTwoTone } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 26,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 18,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\n// 验证码\r\nlet globalCode;\r\n\r\nconst Register = () => {\r\n  let result = \"\";\r\n\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const [emailInfo, setEmailInfo] = useState(false)\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    let country = \"\";\r\n    let regioncity = \"\";\r\n    let queryip = \"\";\r\n    if (document.getElementById(\"emailReceiver\").value !== globalCode) {\r\n      alert(\"请输入正确的验证码！\")\r\n      return\r\n    }\r\n\r\n    // -------------------------------------------------------------------------------------------------------\r\n    (async function () {\r\n      // 获取注册用户的当地地址，城市位置等信息,此处是一个异步请求\r\n      let response = await axios('http://ip-api.com/json/?lang=zh-CN').catch((error) => { result = error })\r\n      country = response.data.country;\r\n      regioncity = response.data.regionName;\r\n      queryip = response.data.query;\r\n      // 向服务器提交用户数据 post\r\n      await axios({\r\n        url: \"https://47.123.7.73:8000/register\",\r\n        method: \"POST\",\r\n        data: {\r\n          username: values.nickname,\r\n          password: values.password,\r\n          intro: values.intro,\r\n          gender: values.gender,\r\n          email: values.email,\r\n          country: country,\r\n          regioncity: regioncity,\r\n          queryip: queryip\r\n        }\r\n      }).then(\r\n        response => {\r\n          result = response.data;\r\n        },\r\n        error => {\r\n          result = error\r\n        }\r\n      )\r\n      api.open({\r\n        key: \"update\",\r\n        message: '注册结果',\r\n        description: result,\r\n      });\r\n      setTimeout(() => {\r\n        window.location.replace('http://' + window.location.host)\r\n      }, 3000)\r\n    })()\r\n\r\n  };\r\n\r\n  // -------------------------------------------------------------------------------------------------------\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          prefix: '86',\r\n        }}\r\n        style={{\r\n          maxWidth: 600,\r\n          marginTop: \"8vh\",\r\n          marginLeft: \"18%\"\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"QQ邮箱\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'QQ邮箱......',\r\n            },\r\n            {\r\n              required: true,\r\n              message: '请输入您的QQ邮箱',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请输入您的QQ邮箱\" id='email' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"密码\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入您的密码',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password placeholder='请输入您的密码' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"请确认您的密码\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请确认您的密码',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('新密码不匹配！'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder='请确认您的密码' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          label=\"用户名\"\r\n          tooltip=\"请输入您的名称\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入您的名称',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='请输入您的名称' />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          name=\"intro\"\r\n          label=\"自我介绍\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请进行简短的自我介绍，最大100字......',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea showCount maxLength={100} placeholder='请进行简短的自我介绍，最大100字......' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"gender\"\r\n          label=\"性别\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择您的性别',\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder=\"请选择您的性别\">\r\n            <Option value=\"男\"></Option>\r\n            <Option value=\"女\"></Option>\r\n            <Option value=\"other\"></Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"验证码\" extra=\"We must make sure that your are a human.\">\r\n          <Row gutter={8}>\r\n\r\n            <Col span={12}>\r\n\r\n              <Form.Item\r\n                name=\"captcha\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: '请输入验证码',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input id=\"emailReceiver\" placeholder='点击发送验证码' />\r\n              </Form.Item>\r\n\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button onClick={(event) => {\r\n                function IsEmail(str) {\r\n                  let reg = /^([a-zA-Z]|[0-9])(\\w|-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\r\n                  return reg.test(str);\r\n                }\r\n                if (!IsEmail(document.getElementById(\"email\").value)) {\r\n                  alert(\"请正确输入您的邮箱！\")\r\n                  document.getElementById(\"email\").value = ''\r\n                  return\r\n                }\r\n                setEmailInfo(true)\r\n                let currentTime = 60\r\n                const timer = setInterval(() => {\r\n                  if (currentTime <= 0) {\r\n                    clearInterval(timer)\r\n                    setEmailInfo(false)\r\n                    event.target.innerText = '发送验证码'\r\n                    return\r\n                  }\r\n                  currentTime -= 1\r\n                  event.target.innerText = currentTime + \"秒后重试\"\r\n                }, 1000)\r\n                axios({\r\n                  url: \"https://47.123.7.73:8000/sendemail\",\r\n                  method: \"GET\",\r\n                  params: {\r\n                    email: document.querySelector(\"#email\").value\r\n                  }\r\n                }).then(\r\n                  response => {\r\n                    let emailCode = response.data.emailCode\r\n                    globalCode = emailCode\r\n                  },\r\n                  error => { console.log(error); }\r\n                )\r\n              }} disabled={emailInfo}>发送验证码</Button>\r\n            </Col>\r\n\r\n          </Row>\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        rules={[\r\n          {\r\n            validator: (_, value) =>\r\n              value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n          },\r\n        ]}\r\n        {...tailFormItemLayout}\r\n      >\r\n        <Checkbox>\r\n          I have read the <a href=\"www.baidu.com\">agreement</a>\r\n        </Checkbox>\r\n      </Form.Item> */}\r\n\r\n        <Form.Item {...tailFormItemLayout} >\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: \"9vw\", width: \"5vw\", height: \"5vh\" }}>\r\n            注册\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default Register;","'use client';\n\nimport { Row } from '../grid';\nexport default Row;","'use client';\n\nimport { Col } from '../grid';\nexport default Col;"],"names":["globalCode","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","result","_notification$useNoti","notification","useNotification","_notification$useNoti2","_slicedToArray","api","contextHolder","_Form$useForm","Form","useForm","form","_useState","useState","_useState2","emailInfo","setEmailInfo","_jsxs","_Fragment","children","_objectSpread","name","onFinish","values","country","regioncity","queryip","document","getElementById","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","catch","error","sent","data","regionName","query","url","method","username","nickname","password","intro","gender","email","then","open","key","message","description","setTimeout","window","location","replace","host","stop","alert","initialValues","prefix","style","maxWidth","marginTop","marginLeft","scrollToFirstError","_jsx","Item","label","rules","type","required","Input","placeholder","id","hasFeedback","Password","dependencies","_ref2","getFieldValue","validator","_","Promise","reject","Error","resolve","tooltip","whitespace","TextArea","showCount","maxLength","extra","Row","gutter","Col","Button","onClick","event","str","test","currentTime","timer","setInterval","clearInterval","target","innerText","params","querySelector","emailCode","console","log","disabled","htmlType","width","height"],"sourceRoot":""}